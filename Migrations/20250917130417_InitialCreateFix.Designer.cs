// <auto-generated />
using AuthorBookApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuthorBookApi.Migrations
{
    [DbContext(typeof(AuthorBookContext))]
    [Migration("20250917130417_InitialCreateFix")]
    partial class InitialCreateFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AuthorBookApi.Models.Sach", b =>
                {
                    b.Property<int>("SachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("SachId");

                    b.ToTable("Sachs");
                });

            modelBuilder.Entity("AuthorBookApi.Models.TacGia", b =>
                {
                    b.Property<int>("TacGiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TacGiaId");

                    b.ToTable("TacGias");
                });

            modelBuilder.Entity("AuthorBookApi.Models.TacGiaSach", b =>
                {
                    b.Property<int>("TacGiaId")
                        .HasColumnType("int");

                    b.Property<int>("SachId")
                        .HasColumnType("int");

                    b.HasKey("TacGiaId", "SachId");

                    b.HasIndex("SachId");

                    b.ToTable("TacGiaSachs");
                });

            modelBuilder.Entity("AuthorBookApi.Models.TacGiaSach", b =>
                {
                    b.HasOne("AuthorBookApi.Models.Sach", "Sach")
                        .WithMany("TacGiaSachs")
                        .HasForeignKey("SachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthorBookApi.Models.TacGia", "TacGia")
                        .WithMany("TacGiaSachs")
                        .HasForeignKey("TacGiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sach");

                    b.Navigation("TacGia");
                });

            modelBuilder.Entity("AuthorBookApi.Models.Sach", b =>
                {
                    b.Navigation("TacGiaSachs");
                });

            modelBuilder.Entity("AuthorBookApi.Models.TacGia", b =>
                {
                    b.Navigation("TacGiaSachs");
                });
#pragma warning restore 612, 618
        }
    }
}
